// TODO: check how to include all the constants in the bindgen openvr_sys binding
// and push a PR

#![allow(dead_code)]

pub const K_UNTRACKINGSTRINGSIZE: u32 = 32;
pub const K_UNMAXDRIVERDEBUGRESPONSESIZE: u32 = 32768;
pub const K_UNTRACKEDDEVICEINDEX_HMD: u32 = 0;
pub const K_UNMAXTRACKEDDEVICECOUNT: u32 = 16;
pub const K_UNTRACKEDDEVICEINDEXOTHER: u32 = 4294967294;
pub const K_UNTRACKEDDEVICEINDEXINVALID: u32 = 4294967295;
pub const K_UNMAXPROPERTYSTRINGSIZE: u32 = 32768;
pub const K_UNCONTROLLERSTATEAXISCOUNT: u32 = 5;
pub const K_ULOVERLAYHANDLEINVALID: u32 = 0;
pub const K_UNSCREENSHOTHANDLEINVALID: u32 = 0;
pub const IVRSYSTEM_VERSION: &'static str = "IVRSystem_012";
pub const IVREXTENDEDDISPLAY_VERSION: &'static str = "IVRExtendedDisplay_001";
pub const IVRTRACKEDCAMERA_VERSION: &'static str = "IVRTrackedCamera_003";
pub const K_UNMAXAPPLICATIONKEYLENGTH: u32 = 128;
pub const IVRAPPLICATIONS_VERSION: &'static str = "IVRApplications_005";
pub const IVRCHAPERONE_VERSION: &'static str = "IVRChaperone_003";
pub const IVRCHAPERONESETUP_VERSION: &'static str = "IVRChaperoneSetup_005";
pub const IVRCOMPOSITOR_VERSION: &'static str = "IVRCompositor_015";
pub const K_UNVROVERLAYMAXKEYLENGTH: u32 = 128;
pub const K_UNVROVERLAYMAXNAMELENGTH: u32 = 128;
pub const K_UNMAXOVERLAYCOUNT: u32 = 32;
pub const IVROVERLAY_VERSION: &'static str = "IVROverlay_012";
pub const K_PCH_CONTROLLER_COMPONENT_GDC2015: &'static str = "gdc2015";
pub const K_PCH_CONTROLLER_COMPONENT_BASE: &'static str = "base";
pub const K_PCH_CONTROLLER_COMPONENT_TIP: &'static str = "tip";
pub const K_PCH_CONTROLLER_COMPONENT_HANDGRIP: &'static str = "handgrip";
pub const K_PCH_CONTROLLER_COMPONENT_STATUS: &'static str = "status";
pub const IVRRENDERMODELS_VERSION: &'static str = "IVRRenderModels_005";
pub const K_UNNOTIFICATIONTEXTMAXSIZE: u32 = 256;
pub const IVRNOTIFICATIONS_VERSION: &'static str = "IVRNotifications_002";
pub const K_UNMAXSETTINGSKEYLENGTH: u32 = 128;
pub const IVRSETTINGS_VERSION: &'static str = "IVRSettings_001";
pub const K_PCH_STEAMVR_SECTION: &'static str = "steamvr";
pub const K_PCH_STEAMVR_REQUIREHMD_STRING: &'static str = "requireHmd";
pub const K_PCH_STEAMVR_FORCEDDRIVERKEY_STRING: &'static str = "forcedDriver";
pub const K_PCH_STEAMVR_FORCEDHMDKEY_STRING: &'static str = "forcedHmd";
pub const K_PCH_STEAMVR_DISPLAYDEBUG_BOOL: &'static str = "displayDebug";
pub const K_PCH_STEAMVR_DEBUGPROCESSPIPE_STRING: &'static str = "debugProcessPipe";
pub const K_PCH_STEAMVR_ENABLEDISTORTION_BOOL: &'static str = "enableDistortion";
pub const K_PCH_STEAMVR_DISPLAYDEBUGX_INT32: &'static str = "displayDebugX";
pub const K_PCH_STEAMVR_DISPLAYDEBUGY_INT32: &'static str = "displayDebugY";
pub const K_PCH_STEAMVR_SENDSYSTEMBUTTONTOALLAPPS_BOOL: &'static str = "sendSystemButtonToAllApps";
pub const K_PCH_STEAMVR_LOGLEVEL_INT32: &'static str = "loglevel";
pub const K_PCH_STEAMVR_IPD_FLOAT: &'static str = "ipd";
pub const K_PCH_STEAMVR_BACKGROUND_STRING: &'static str = "background";
pub const K_PCH_STEAMVR_BACKGROUNDCAMERAHEIGHT_FLOAT: &'static str = "backgroundCameraHeight";
pub const K_PCH_STEAMVR_BACKGROUNDDOMERADIUS_FLOAT: &'static str = "backgroundDomeRadius";
pub const K_PCH_STEAMVR_ENVIRONMENT_STRING: &'static str = "environment";
pub const K_PCH_STEAMVR_GRIDCOLOR_STRING: &'static str = "gridColor";
pub const K_PCH_STEAMVR_PLAYAREACOLOR_STRING: &'static str = "playAreaColor";
pub const K_PCH_STEAMVR_SHOWSTAGE_BOOL: &'static str = "showStage";
pub const K_PCH_STEAMVR_ACTIVATEMULTIPLEDRIVERS_BOOL: &'static str = "activateMultipleDrivers";
pub const K_PCH_STEAMVR_POWEROFFONEXIT_BOOL: &'static str = "powerOffOnExit";
pub const K_PCH_STEAMVR_STANDBYAPPRUNNINGTIMEOUT_FLOAT: &'static str = "standbyAppRunningTimeout";
pub const K_PCH_STEAMVR_STANDBYNOAPPTIMEOUT_FLOAT: &'static str = "standbyNoAppTimeout";
pub const K_PCH_STEAMVR_DIRECTMODE_BOOL: &'static str = "directMode";
pub const K_PCH_STEAMVR_DIRECTMODEEDIDVID_INT32: &'static str = "directModeEdidVid";
pub const K_PCH_STEAMVR_DIRECTMODEEDIDPID_INT32: &'static str = "directModeEdidPid";
pub const K_PCH_STEAMVR_USINGSPEAKERS_BOOL: &'static str = "usingSpeakers";
pub const K_PCH_STEAMVR_SPEAKERSFORWARDYAWOFFSETDEGREES_FLOAT: &'static str = "speakersForwardYawOffsetDegrees";
pub const K_PCH_STEAMVR_BASESTATIONPOWERMANAGEMENT_BOOL: &'static str = "basestationPowerManagement";
pub const K_PCH_STEAMVR_NEVERKILLPROCESSES_BOOL: &'static str = "neverKillProcesses";
pub const K_PCH_STEAMVR_RENDERTARGETMULTIPLIER_FLOAT: &'static str = "renderTargetMultiplier";
pub const K_PCH_STEAMVR_ALLOWREPROJECTION_BOOL: &'static str = "allowReprojection";
pub const K_PCH_STEAMVR_FORCEREPROJECTION_BOOL: &'static str = "forceReprojection";
pub const K_PCH_STEAMVR_FORCEFADEONBADTRACKING_BOOL: &'static str = "forceFadeOnBadTracking";
pub const K_PCH_STEAMVR_DEFAULTMIRRORVIEW_INT32: &'static str = "defaultMirrorView";
pub const K_PCH_STEAMVR_SHOWMIRRORVIEW_BOOL: &'static str = "showMirrorView";
pub const K_PCH_LIGHTHOUSE_SECTION: &'static str = "driver_lighthouse";
pub const K_PCH_LIGHTHOUSE_DISABLEIMU_BOOL: &'static str = "disableimu";
pub const K_PCH_LIGHTHOUSE_USEDISAMBIGUATION_STRING: &'static str = "usedisambiguation";
pub const K_PCH_LIGHTHOUSE_DISAMBIGUATIONDEBUG_INT32: &'static str = "disambiguationdebug";
pub const K_PCH_LIGHTHOUSE_PRIMARYBASESTATION_INT32: &'static str = "primarybasestation";
pub const K_PCH_LIGHTHOUSE_LIGHTHOUSENAME_STRING: &'static str = "lighthousename";
pub const K_PCH_LIGHTHOUSE_MAXINCIDENCEANGLEDEGREES_FLOAT: &'static str = "maxincidenceangledegrees";
pub const K_PCH_LIGHTHOUSE_USELIGHTHOUSEDIRECT_BOOL: &'static str = "uselighthousedirect";
pub const K_PCH_LIGHTHOUSE_DBHISTORY_BOOL: &'static str = "dbhistory";
pub const K_PCH_NULL_SECTION: &'static str = "driver_null";
pub const K_PCH_NULL_ENABLENULLDRIVER_BOOL: &'static str = "enable";
pub const K_PCH_NULL_SERIALNUMBER_STRING: &'static str = "serialNumber";
pub const K_PCH_NULL_MODELNUMBER_STRING: &'static str = "modelNumber";
pub const K_PCH_NULL_WINDOWX_INT32: &'static str = "windowX";
pub const K_PCH_NULL_WINDOWY_INT32: &'static str = "windowY";
pub const K_PCH_NULL_WINDOWWIDTH_INT32: &'static str = "windowWidth";
pub const K_PCH_NULL_WINDOWHEIGHT_INT32: &'static str = "windowHeight";
pub const K_PCH_NULL_RENDERWIDTH_INT32: &'static str = "renderWidth";
pub const K_PCH_NULL_RENDERHEIGHT_INT32: &'static str = "renderHeight";
pub const K_PCH_NULL_SECONDSFROMVSYNCTOPHOTONS_FLOAT: &'static str = "secondsFromVsyncToPhotons";
pub const K_PCH_NULL_DISPLAYFREQUENCY_FLOAT: &'static str = "displayFrequency";
pub const K_PCH_USERINTERFACE_SECTION: &'static str = "userinterface";
pub const K_PCH_USERINTERFACE_STATUSALWAYSONTOP_BOOL: &'static str = "StatusAlwaysOnTop";
pub const K_PCH_USERINTERFACE_ENABLESCREENSHOTS_BOOL: &'static str = "EnableScreenshots";
pub const K_PCH_NOTIFICATIONS_SECTION: &'static str = "notifications";
pub const K_PCH_NOTIFICATIONS_DONOTDISTURB_BOOL: &'static str = "DoNotDisturb";
pub const K_PCH_KEYBOARD_SECTION: &'static str = "keyboard";
pub const K_PCH_KEYBOARD_TUTORIALCOMPLETIONS: &'static str = "TutorialCompletions";
pub const K_PCH_KEYBOARD_SCALEX: &'static str = "ScaleX";
pub const K_PCH_KEYBOARD_SCALEY: &'static str = "ScaleY";
pub const K_PCH_KEYBOARD_OFFSETLEFTX: &'static str = "OffsetLeftX";
pub const K_PCH_KEYBOARD_OFFSETRIGHTX: &'static str = "OffsetRightX";
pub const K_PCH_KEYBOARD_OFFSETY: &'static str = "OffsetY";
pub const K_PCH_KEYBOARD_SMOOTHING: &'static str = "Smoothing";
pub const K_PCH_PERF_SECTION: &'static str = "perfcheck";
pub const K_PCH_PERF_HEURISTICACTIVE_BOOL: &'static str = "heuristicActive";
pub const K_PCH_PERF_NOTIFYINHMD_BOOL: &'static str = "warnInHMD";
pub const K_PCH_PERF_NOTIFYONLYONCE_BOOL: &'static str = "warnOnlyOnce";
pub const K_PCH_PERF_ALLOWTIMINGSTORE_BOOL: &'static str = "allowTimingStore";
pub const K_PCH_PERF_SAVETIMINGSONEXIT_BOOL: &'static str = "saveTimingsOnExit";
pub const K_PCH_PERF_TESTDATA_FLOAT: &'static str = "perfTestData";
pub const K_PCH_COLLISIONBOUNDS_SECTION: &'static str = "collisionBounds";
pub const K_PCH_COLLISIONBOUNDS_STYLE_INT32: &'static str = "CollisionBoundsStyle";
pub const K_PCH_COLLISIONBOUNDS_GROUNDPERIMETERON_BOOL: &'static str = "CollisionBoundsGroundPerimeterOn";
pub const K_PCH_COLLISIONBOUNDS_CENTERMARKERON_BOOL: &'static str = "CollisionBoundsCenterMarkerOn";
pub const K_PCH_COLLISIONBOUNDS_PLAYSPACEON_BOOL: &'static str = "CollisionBoundsPlaySpaceOn";
pub const K_PCH_COLLISIONBOUNDS_FADEDISTANCE_FLOAT: &'static str = "CollisionBoundsFadeDistance";
pub const K_PCH_COLLISIONBOUNDS_COLORGAMMAR_INT32: &'static str = "CollisionBoundsColorGammaR";
pub const K_PCH_COLLISIONBOUNDS_COLORGAMMAG_INT32: &'static str = "CollisionBoundsColorGammaG";
pub const K_PCH_COLLISIONBOUNDS_COLORGAMMAB_INT32: &'static str = "CollisionBoundsColorGammaB";
pub const K_PCH_COLLISIONBOUNDS_COLORGAMMAA_INT32: &'static str = "CollisionBoundsColorGammaA";
pub const K_PCH_CAMERA_SECTION: &'static str = "camera";
pub const K_PCH_CAMERA_ENABLECAMERA_BOOL: &'static str = "enableCamera";
pub const K_PCH_CAMERA_ENABLECAMERAINDASHBOARD_BOOL: &'static str = "enableCameraInDashboard";
pub const K_PCH_CAMERA_ENABLECAMERAFORCOLLISIONBOUNDS_BOOL: &'static str = "enableCameraForCollisionBounds";
pub const K_PCH_CAMERA_ENABLECAMERAFORROOMVIEW_BOOL: &'static str = "enableCameraForRoomView";
pub const K_PCH_CAMERA_BOUNDSCOLORGAMMAR_INT32: &'static str = "cameraBoundsColorGammaR";
pub const K_PCH_CAMERA_BOUNDSCOLORGAMMAG_INT32: &'static str = "cameraBoundsColorGammaG";
pub const K_PCH_CAMERA_BOUNDSCOLORGAMMAB_INT32: &'static str = "cameraBoundsColorGammaB";
pub const K_PCH_CAMERA_BOUNDSCOLORGAMMAA_INT32: &'static str = "cameraBoundsColorGammaA";
pub const K_PCH_AUDIO_SECTION: &'static str = "audio";
pub const K_PCH_AUDIO_ONPLAYBACKDEVICE_STRING: &'static str = "onPlaybackDevice";
pub const K_PCH_AUDIO_ONRECORDDEVICE_STRING: &'static str = "onRecordDevice";
pub const K_PCH_AUDIO_ONPLAYBACKMIRRORDEVICE_STRING: &'static str = "onPlaybackMirrorDevice";
pub const K_PCH_AUDIO_OFFPLAYBACKDEVICE_STRING: &'static str = "offPlaybackDevice";
pub const K_PCH_AUDIO_OFFRECORDDEVICE_STRING: &'static str = "offRecordDevice";
pub const K_PCH_AUDIO_VIVEHDMIGAIN: &'static str = "viveHDMIGain";
pub const K_PCH_MODELSKIN_SECTION: &'static str = "modelskins";